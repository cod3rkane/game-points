{"version":3,"sources":["containers/home/logo.svg","serviceWorker.js","containers/home/index.jsx","components/ColorItem/index.jsx","entities/CollectItem.js","components/RandomItemSpawner/index.jsx","components/Board/index.jsx","reducers/actions.js","components/ResumeItem/index.jsx","components/PlayerInfo/index.jsx","containers/main/index.jsx","routes.jsx","util/randomString.js","util/items.js","reducers/board.js","reducers/bonus.js","reducers/inventory.js","reducers/score.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Home","react_default","a","createElement","className","src","logo","alt","href","target","rel","ColorItem","_ref","color","id","onClick","_useState","useState","_useState2","Object","slicedToArray","click","setClick","style","backgroundColor","role","tabIndex","String","fromCharCode","CollectItem","Record","Number","key","score","bonus","hasBonus","collected","RandomItemSpawner","items","onCollectItem","transitions","useTransition","item","unique","trail","length","from","opacity","transform","enter","leave","update","config","mass","tension","friction","map","_ref2","props","web","div","ColorItem_ColorItem","defaultProps","connect","Board","dispatch","collect","payload","type","removeItemFromBoard","gameOver","RandomItemSpawner_RandomItemSpawner","ResumeItem","charId","Inventory","newGame","getState","time","setTimeout","allScores","R","acc","cv","concat","toConsumableArray","bonuses","resumeItems","v","k","e","push","ResumeItem_ResumeItem","Main","components_Board","PlayerInfo","Routes","react_router","exact","path","component","randomstring","Math","random","toString","substr","itemsData","bonusRules","65","group","66","newList","list","i","floor","initialState","state","arguments","undefined","action","s","objectSpread","evt","itemIndex","set","actionHandler","Bonus","minorState","newItems","mapIndex","index","keys","cleanItems","defineProperty","Score","reducers","combineReducers","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","createStore","ReactDOM","render","react_router_dom","es","store","Store","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.139896fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nimport logo from './logo.svg';\n\nexport const Home = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit\n        <code>src/App.js</code>\n        and save to reload.\n      </p>\n      <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Learn React\n      </a>\n    </header>\n  </div>\n);\n\nexport default Home;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ColorItem = ({ color, id, onClick }) => {\n  const [click, setClick] = useState(false);\n  const handleClick = () => {\n    if (!click) {\n      setClick(true);\n      onClick();\n    }\n  };\n\n  return (\n    <div className=\"colorItem\" style={{ backgroundColor: color }} onClick={handleClick} role=\"button\" tabIndex={id}>\n      <span>{String.fromCharCode(id)}</span>\n    </div>\n  );\n};\n\nColorItem.propTypes = {\n  color: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ColorItem;\n","import { Record } from 'immutable';\n\nexport const CollectItem = Record({\n  id: Number,\n  color: '',\n  key: '',\n  score: 0,\n  bonus: 0,\n  hasBonus: false,\n  collected: false,\n});\n\nexport default CollectItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTransition, a } from 'react-spring';\n\nimport { ColorItem } from '../ColorItem';\nimport { CollectItem } from '../../entities/CollectItem';\n\nexport const RandomItemSpawner = ({ items, onCollectItem }) => {\n  const transitions = useTransition(items, item => item.key, {\n    unique: true,\n    trail: 400 / items.length,\n    from: { opacity: 0, transform: 'scale(0)' },\n    enter: { opacity: 1, transform: 'scale(1)' },\n    leave: { opacity: 0, transform: 'scale(0)' },\n    update: item => [{ opacity: item.collected ? 0 : 1, transform: item.collected ? 'scale(0)' : 'scale(1)' }],\n    config: { mass: 1, tension: 500, friction: 55 },\n  });\n\n  return (\n    <div className=\"itemSpawner\">\n      {transitions.map(({ item, props, key }) => (\n        <a.div key={key} style={props}>\n          <ColorItem\n            key={item.key}\n            id={item.id}\n            color={item.color}\n            onClick={() => onCollectItem(item)}\n          />\n        </a.div>\n      ))}\n    </div>\n  );\n};\n\nRandomItemSpawner.defaultProps = {\n  items: [],\n};\n\nRandomItemSpawner.propTypes = {\n  items: PropTypes.arrayOf(CollectItem),\n  onCollectItem: PropTypes.func.isRequired,\n};\n\nexport default RandomItemSpawner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { RandomItemSpawner } from '../RandomItemSpawner';\nimport { collectItem } from '../../reducers/actions';\n\nexport const BoardGame = ({ Board, collect }) => {\n  return (\n    <div className=\"board\">\n      {Board.gameOver && (\n        <div className=\"game-over\">\n          <h4>Game Over</h4>\n        </div>\n      )}\n      <RandomItemSpawner items={Board.items} onCollectItem={collect} />\n    </div>\n  );\n};\n\nBoardGame.propTypes = {\n  Board: PropTypes.shape({ items: PropTypes.array }).isRequired,\n  collect: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ Board }) => ({ Board });\nconst mapDispatchToProps = dispatch => ({\n  collect: item => dispatch(collectItem(item)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BoardGame);\n","export const REMOVE_ITEM_FROM_BOARD = 'REMOVE_ITEM_FROM_BOARD';\nexport const COLLECT_ITEM = 'COLLECT_ITEM';\nexport const DELIVERY_TO_INVENTORY = 'DELIVERY_TO_INVENTORY';\nexport const UPDATE_SCORE = 'UPDATE_SCORE';\nexport const RESET_GAME = 'RESET_GAME';\nexport const NEW_GAME = 'NEW_GAME';\n\nexport const removeItemFromBoard = payload => ({\n  type: REMOVE_ITEM_FROM_BOARD,\n  payload,\n});\n\nexport const collectItem = payload => (dispatch) => {\n  dispatch(removeItemFromBoard(payload.key));\n  dispatch({\n    type: COLLECT_ITEM,\n    payload,\n  });\n};\n\nexport const createNewGame = payload => (dispatch, getState) => {\n  const state = getState();\n  const time = state.Board.items.length > 0 ? 300 : 0;\n\n  dispatch({ type: RESET_GAME });\n  setTimeout(\n    () => dispatch({\n      type: NEW_GAME,\n      payload,\n    }),\n    time,\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ResumeItem = ({\n  charId, length, score, color,\n}) => (\n  <div>\n    <span style={{ backgroundColor: color }} className=\"color-item-small\">{String.fromCharCode(charId)}</span>\n    <span>{length}</span>\n    <span>{score}</span>\n  </div>\n);\n\nResumeItem.propTypes = {\n  charId: PropTypes.string.isRequired,\n  length: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default ResumeItem;\n","import React from 'react';\nimport * as R from 'ramda';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { CollectItem } from '../../entities/CollectItem';\nimport { createNewGame } from '../../reducers/actions';\nimport { ResumeItem } from '../ResumeItem';\n\nexport const PlayerInfor = ({ Inventory, newGame }) => {\n  const allScores = R.cond([\n    [R.isEmpty, R.always([0])],\n    [R.T, R.reduce((acc, cv) => [...acc, cv.bonus, cv.score], [])],\n  ]);\n  const bonuses = R.cond([\n    [R.isEmpty, R.always([0])],\n    [R.T, R.reduce((acc, cv) => [...acc, cv.bonus], [])],\n  ]);\n  const items = R.reduce((acc, cv) => [...acc, ...cv], [], R.values(Inventory));\n  const resumeItems = [];\n  R.mapObjIndexed(\n    (v, k) => {\n      const score = R.map(e => e.bonus + e.score, v);\n      resumeItems.push(\n        <ResumeItem\n          key={k}\n          charId={k}\n          length={v.length}\n          score={R.sum(score)}\n          color={R.head(v).color}\n        />,\n      );\n    },\n    Inventory,\n  );\n\n  return (\n    <div className=\"playerInfor\">\n      <section className=\"score-resume\">\n        <div className=\"header\">\n          <h4>Item</h4>\n          <h4>Qty</h4>\n          <h4>Score</h4>\n        </div>\n        <div className=\"items\">{resumeItems}</div>\n      </section>\n      <section className=\"score flex\">\n        <div>\n          <h4>Bonuses</h4>\n        </div>\n        <div>\n          <span className=\"bonus\">{R.sum(bonuses(items))}</span>\n        </div>\n        <div>\n          <h4>Total</h4>\n        </div>\n        <div>\n          <span className=\"score\">{R.sum(allScores(items))}</span>\n        </div>\n      </section>\n      <section className=\"actions flex\">\n        <button type=\"button\" onClick={newGame}>\n          New Game\n        </button>\n      </section>\n    </div>\n  );\n};\n\nPlayerInfor.propTypes = {\n  Inventory: PropTypes.objectOf(CollectItem).isRequired,\n  newGame: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ Inventory }) => ({ Inventory });\nconst mapDispatchToProps = dispatch => ({\n  newGame: () => dispatch(createNewGame()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlayerInfor);\n","import React from 'react';\n\nimport BoardGame from '../../components/Board';\nimport PlayerInfor from '../../components/PlayerInfo';\n\nexport const Main = () => (\n  <div>\n    <header>\n      <h1>Game Points!</h1>\n    </header>\n    <main>\n      <BoardGame />\n      <PlayerInfor />\n    </main>\n  </div>\n);\n\nexport default Main;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Home } from './containers/home';\nimport { Main } from './containers/main';\n\nexport const Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route exact path=\"/home\" component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","export const randomstring = () => `_${\n  Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n\nexport default randomstring;\n","export const itemsData = [\n  { id: 65, color: '#293132', score: 50 },\n  { id: 66, color: '#474044', score: 30 },\n  { id: 67, color: '#4398f2', score: 20 },\n  { id: 68, color: '#547aa5', score: 15 },\n  { id: 69, color: '#50d8d7', score: 10 },\n  { id: 70, color: '#a55490', score: 10 },\n  { id: 71, color: '#b650d8', score: 10 },\n  { id: 72, color: '#3b635d', score: 10 },\n  { id: 73, color: '#9dc651', score: 10 },\n  { id: 74, color: '#5d51c6', score: 10 },\n  { id: 75, color: '#f2c943', score: 10 },\n  { id: 76, color: '#4b633b', score: 10 },\n  { id: 77, color: '#436cf2', score: 10 },\n  { id: 78, color: '#7a51c6', score: 10 },\n  { id: 79, color: '#493b63', score: 10 },\n  { id: 80, color: '#3b6349', score: 10 },\n  { id: 81, color: '#533b63', score: 10 },\n  { id: 82, color: '#633b41', score: 10 },\n  { id: 83, color: '#51c65d', score: 10 },\n  { id: 84, color: '#8f909d', score: 10 },\n  { id: 85, color: '#c65180', score: 10 },\n  { id: 86, color: '#f243ef', score: 10 },\n  { id: 87, color: '#f24643', score: 10 },\n  { id: 88, color: '#43f246', score: 10 },\n  { id: 89, color: '#51c697', score: 10 },\n  { id: 90, color: '#494670', score: 10 },\n];\n\nexport const bonusRules = {\n  65: {\n    score: 50, group: 3,\n  },\n  66: {\n    score: 30, group: 2,\n  },\n};\n\nexport default itemsData;\n","import * as R from 'ramda';\n\nimport { REMOVE_ITEM_FROM_BOARD, NEW_GAME, RESET_GAME } from './actions';\nimport { CollectItem } from '../entities/CollectItem';\nimport { randomstring } from '../util/randomString';\nimport { itemsData } from '../util/items';\n\nconst MAX_ITEMS = 25;\nconst getRandomItem = items => items[Math.floor(Math.random() * items.length)];\nconst newList = () => {\n  const list = [];\n\n  for (let i = 0; i < MAX_ITEMS; i++) {\n    const item = getRandomItem(itemsData);\n    list.push(\n      new CollectItem({\n        id: item.id,\n        key: randomstring(),\n        color: item.color,\n        score: item.score,\n      }),\n    );\n  }\n\n  return list;\n};\n\nconst initialState = {\n  items: newList(),\n  gameOver: false,\n};\n\nexport const Board = (state = initialState, action) => {\n  const removeID = (evt) => {\n    const itemIndex = R.findIndex(R.propEq('key', evt.payload), state.items);\n    const item = R.find(R.propEq('key', evt.payload), state.items);\n    const items = R.update(itemIndex, item.set('collected', true), state.items);\n\n    return { ...state, items };\n  };\n  const isGameOver = (s) => {\n    const items = R.reject(R.propEq('collected', true), s.items);\n    const gameOver = items.length <= 0;\n\n    return { ...s, gameOver };\n  };\n  const actionHandler = R.cond([\n    [R.propEq('type', REMOVE_ITEM_FROM_BOARD), R.compose(isGameOver, removeID)],\n    [R.propEq('type', RESET_GAME), R.always({ items: [] })],\n    [R.propEq('type', NEW_GAME), R.always({ items: newList() })],\n    [R.T, R.always(state)],\n  ]);\n\n  return actionHandler(action);\n};\n\nexport default Board;\n","const initialState = {};\n\nexport const Bonus = (state = initialState) => {\n  return state;\n};\n\nexport default Bonus;\n","/* eslint-disable no-underscore-dangle */\nimport * as R from 'ramda';\n\nimport { COLLECT_ITEM, NEW_GAME } from './actions';\nimport { bonusRules } from '../util/items';\n\nconst initialState = {};\n\nexport const Inventory = (state = initialState, action) => {\n  const bonus = (minorState) => {\n    const newState = R.mapObjIndexed((v, k) => {\n      const score = R.prop(k, bonusRules);\n      if (score) {\n        const items = R.reject(R.propEq('hasBonus', true), v);\n        if (items.length >= score.group) {\n          const mapIndex = R.addIndex(R.map);\n          const newItems = mapIndex((e, i) => {\n            const index = i + 1;\n            if (index <= items.length) {\n              if (index === items.length) {\n                const eBonus = e.set('bonus', score.score);\n\n                return eBonus.set('hasBonus', true);\n              }\n\n              return e.set('hasBonus', true);\n            }\n\n            return e;\n          }, items);\n          const keys = R.map(e => e.key, newItems);\n          const cleanItems = R.reject(e => R.includes(e.key, keys), v);\n\n          return [...newItems, ...cleanItems];\n        }\n      }\n\n      return v;\n    }, minorState);\n\n    return newState;\n  };\n  const collect = R.compose(\n    bonus,\n    R.reduce((acc, cv) => ({ ...acc, [cv.id]: acc[cv.id] ? [...acc[cv.id], cv] : [cv] }), state),\n    R.append(R.__, state),\n    R.prop('payload'),\n  );\n  const actionHandler = R.cond([\n    [R.propEq('type', COLLECT_ITEM), collect],\n    [R.propEq('type', NEW_GAME), R.always({})],\n    [R.T, R.always(state)],\n  ]);\n\n  return actionHandler(action);\n};\n\nexport default Inventory;\n","const initialState = {};\n\nexport const Score = (state = initialState) => {\n  return state;\n};\n\nexport default Score;\n","import {\n  createStore, combineReducers, applyMiddleware, compose,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport { Board } from './board';\nimport { Bonus } from './bonus';\nimport { Inventory } from './inventory';\nimport { Score } from './score';\n\nconst reducers = combineReducers({\n  Board,\n  Bonus,\n  Inventory,\n  Score,\n});\n\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n  })\n  : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunkMiddleware),\n  // other store enhancers if any\n);\n\nexport default createStore(reducers, enhancer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles/index.scss';\n\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './routes';\nimport Store from './reducers';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={Store}>\n      <Routes />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}